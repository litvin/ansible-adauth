---
# tasks file for common

- name: Install prerequisites
  package: name={{item}} state=present
  with_items:
   - realmd 
   - oddjob
   - oddjob-mkhomedir
   - samba-common
   - sssd
   - python-pip
   - krb5-workstation

- name: Install pexpect using pip
  pip: name=pexpect

- name: Discover realm
  shell: /bin/bash -c "/usr/sbin/realm discover {{ domain_full_lowercase }}"
  register: realmd_discovery

- name: Check if machine is bound
  shell: /bin/bash -c "realm list | grep sssd"
  register: realmd_bound
  changed_when: false
  ignore_errors: true

- name: Join Active Directory
  expect:
    command: /bin/bash -c "/usr/sbin/realm join {{ domain_full_lowercase }} -U {{ adauth_username }}"
    responses: 
      Password for .*: "{{ adauth_password }}"
  when: realmd_bound|failed
  register: realmd_join

- name: Check if {{ ad_sysadmin_group }} group can login through ssh
  command: /bin/bash -c "/usr/sbin/realm list|grep {{ ad_sysadmin_group }}"
  register: INFRA_LinuxAdmins_login
  changed_when: false
  ignore_errors: true

- name: Permit {{ ad_sysadmin_group }} group login
  command: /bin/bash -c "/usr/sbin/realm permit -g {{ ad_sysadmin_group }}" 
  when: INFRA_LinuxAdmins_login|failed

- name: Generate sssd.conf (1/3)
  lineinfile: dest=/etc/sssd/sssd.conf line="use_fully_qualified_names = False"
  register: sssd1

- name: Generate sssd.conf (2/3)
  lineinfile: dest=/etc/sssd/sssd.conf state=present regexp="fallback_homedir = /home/%u@%d" line="fallback_homedir = /home/%u/" backrefs=yes 
  register: sssd2

- name: Generate sssd.conf (3/3)
  lineinfile: dest=/etc/sssd/sssd.conf line="fallback_homedir = /home/%u/"
  register: sssd3

# Prior to ansible 2.2
- name: Restart daemon
  command: systemctl daemon-reload
  when: sssd1.changed or sssd2.changed or sssd3.changed

- name: Restart sssd
  command: systemctl restart sssd
  when: sssd1.changed or sssd2.changed or sssd3.changed

# Ansible 2.2
#- name: Restart sssd
#  systemd: state=restarted daemon_reload=yes name=sssd

- name: Check if {{ ad_sysadmin_group }} group have sudoers rights
  stat: path=/etc/sudoers.d/{{ ad_sysadmin_group }}
  register: st

- name: Add s_sytemes group to sudoers
  copy: content="%{{ ad_sysadmin_group }} ALL=(ALL) ALL" dest="/etc/sudoers.d/{{ ad_sysadmin_group }}" owner=root group=root mode=044
  when: st.stat.exists == false
